permissions:
  contents: write

name: Build Genpay Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: genpay-linux-x86_64
            binary: genpay
          - target: aarch64-apple-darwin
            os: macos-latest
            name: genpay-macos-aarch64
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    # Linux dependencies
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y llvm-18-dev libclang-18-dev clang-18 libpolly-18-dev
        echo "LLVM_SYS_180_PREFIX=/usr/lib/llvm-18" >> $GITHUB_ENV

    # macOS dependencies
    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install llvm@18 zstd libffi
        LLVM_PREFIX=$(brew --prefix llvm@18)
        echo "LLVM_SYS_180_PREFIX=$LLVM_PREFIX" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$LLVM_PREFIX/lib:$(brew --prefix zstd)/lib:$(brew --prefix libffi)/lib:$LIBRARY_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$LLVM_PREFIX/lib:$(brew --prefix zstd)/lib:$(brew --prefix libffi)/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$LLVM_PREFIX/lib/pkgconfig:$(brew --prefix zstd)/lib/pkgconfig:$(brew --prefix libffi)/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "RUSTFLAGS=-L$LLVM_PREFIX/lib" >> $GITHUB_ENV

  release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        
        # Create platform-specific archive names and copy binaries
        # Linux binary
        mkdir -p release-assets/genpay-linux-x86_64
        cp artifacts/genpay-linux-x86_64/genpay-linux-x86_64 release-assets/genpay-linux-x86_64/genpay
        cp LICENSE release-assets/genpay-linux-x86_64/
        cp README.md release-assets/genpay-linux-x86_64/
        cp -r stdlib release-assets/genpay-linux-x86_64/
        chmod +x release-assets/genpay-linux-x86_64/genpay
        
        # macOS binary
        mkdir -p release-assets/genpay-macos-aarch64
        cp artifacts/genpay-macos-aarch64/genpay-macos-aarch64 release-assets/genpay-macos-aarch64/genpay
        cp LICENSE release-assets/genpay-macos-aarch64/
        cp README.md release-assets/genpay-macos-aarch64/
        cp -r stdlib release-assets/genpay-macos-aarch64/
        chmod +x release-assets/genpay-macos-aarch64/genpay
        
        # Create archives for each platform
        cd release-assets
        tar -czf genpay-linux-x86_64.tar.gz genpay-linux-x86_64/
        tar -czf genpay-macos-aarch64.tar.gz genpay-macos-aarch64/
        
    - name: Generate tag name
      id: tag
      run: |
        if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" =~ refs/tags/(v.*) ]]; then
          TAG="${BASH_REMATCH[1]}"
        else
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          TAG="release-${TIMESTAMP}"
        fi
        echo "tag=${TAG}" >> $GITHUB_OUTPUT

    - name: Create Draft Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: "genpay Compiler ${{ steps.tag.outputs.tag }}"
        draft: true
        generate_release_notes: true
        files: |
          release-assets/genpay-linux-x86_64.tar.gz
          release-assets/genpay-macos-aarch64.tar.gz
          
